using namespace System.Management.Automation.Host
$usmtdir = "C:\USMT\amd64"


function Install-USMT {
    if (-not (Test-Path -Path usmtdir\scanstate.exe -PathType Leaf)) {
        New-Item -Path $usmtdir -ItemType Directory
        Invoke-WebRequest -Uri "http://ooo.vvvvv.ooo/usmt1.zip" -OutFile "$usmtdir\usmt.zip"
        Expand-Archive -Path C:\USMT\amd64\usmt.zip -DestinationPath $usmtdir
        Remove-Item $usmtdir\usmt.zip
    } else {
        # Continuing script if file exists...
    }    
}


# Start scanstate on source machine
function New-Backup {
    if (-not (Test-Path -Path $usmtdir\scanstate.exe -PathType Leaf)) {
        Install-USMT
    } else {
        Set-Location $usmtdir
    }
    $migdir = "C:\TEMP\MigrationStore\$env:COMPUTERNAME"
    .\scanstate.exe $migdir /i:Config.xml /o /vsc /ue:*\* /ui:fpcahk\$env:UserName /listfiles:$migdir\FilesMigrated.log /l:$migdir\scan.log /progress:$migdir\scan_progress.log /efs:abort /c
}

# Start loadstate on destination machine
function New-Restore {
    if (-not (Test-Path -Path $usmtdir\loadstate.exe -PathType Leaf)) {
        Install-USMT
    } else {
        Set-Location $usmtdir        
    }
    $oldpcname = Read-Host -Prompt "Please input Old Computername"
    $migdir = "C:\TEMP\MigrationStore\$oldpcname"
    if (-not (Test-Path -Path $migdir\USMT\USMT.MIG -PathType Leaf)) {
        Throw 'The file does not exist'
    } else {
        # Continuing script if file exists...
    }
    $inputuser = Read-Host -Prompt "Please input username"
    .\LoadState.exe /i:Config.xml $migdir /progress:$migdir\load_progress.log /l:$migdir\LoadState.log /mu:fpcahk\$inputuser`:g08\$inputuser
}

# Show Menu
function New-Menu {
    [CmdletBinding()]
    param(
        [Parameter(Mandatory)]
        [ValidateNotNullOrEmpty()]
        [string]$Title,

        [Parameter(Mandatory)]
        [ValidateNotNullOrEmpty()]
        [string]$Question
    )
    
    $backup = [ChoiceDescription]::new('&Backup', 'Backup files to USB')
    $restore = [ChoiceDescription]::new('&Restore', 'Restore files from USB')
    $yellow = [ChoiceDescription]::new('&Yellow', 'Favorite color: Yellow')

    $options = [ChoiceDescription[]]($backup, $restore, $yellow)

    $result = $host.ui.PromptForChoice($Title, $Question, $options, 0)

    switch ($result) {
        0 { New-Backup }
        1 { New-Restore }
        2 { 'Your favorite color is Yellow' }
    }

}

New-Menu -Title 'Confirm' -Question 'How do you want to transfer your data?'
